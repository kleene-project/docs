command: klee run
deprecated: false
examples: "\n### <a name=\"name\"></a> Assign name and allocate pseudo-TTY (--name,\
  \ -it)\n\n```console\n$ klee run --name test -it FreeBSD-13.2-RELEASE /bin/sh\n\
  839aee293db2\ncreated execution instance 176b56a85a4a\n#\nroot@d6c0fe130dba:/# exit\n\
  exit\n\nexecutable 176b56a85a4a and its container exited with exit-code 0\n$\n```\n\
  \nThis example runs a container named `test` using the `FreeBSD-13.2-STABLE:latest`\n\
  image. The `-it` options instructs Kleene to allocate a pseudo-TTY connected to\n\
  the container's stdin; creating an interactive Bourne shell in the container.\n\
  In the example, the Bourne shell is quit by entering `exit`.\n\n### <a name=\"mount\"\
  ></a> Mounting filesystems into containers (-m, --mount)\n\n```console\n$ klee run\
  \ -m some_storage:/foo/bar -it FreeBSD-13.2-STABLE /bin/sh\n...\n# ls /foo\nbar\n\
  # exit\n$ klee volume ls\n VOLUME NAME    CREATED\n\u2500\u2500\u2500\u2500\u2500\
  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\
  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n some_storage\
  \   5 seconds ago\n```\n\nWhen the target directory of a mount doesn't exist, Kleened\n\
  will automatically create this directory in the container. This example\ncaused\
  \ Kleened to create `/foo/bar` folder before starting the container.\nSimilarily,\
  \ if the specified volume does not exist, Kleened will create\nit for you. In this\
  \ example the volume `some_storage` was just created.\n\n\n```console\n$ klee run\
  \ -m archive:/writeprotected:ro FreeBSD13.2-STABLE touch /writeprotected/here\n\
  50d478460a91\ncreated execution instance badd96b047a5\ntouch: /writeprotected/here:\
  \ Read-only file system\njail: /usr/bin/env -i touch /writeprotected/here: failed\n\
  \nexecutable badd96b047a5 and its container exited with exit-code 1\n```\n\nVolumes\
  \ can be mounted read-only to control where a container writes files.\nThe `:ro`\
  \ option must be postfixed the mountpoint to mark the mount as read only.\n\n```console\n\
  $ klee run -m /home/someuser/kleened:/kleened FreeBSD13.2-STABLE ls /kleened/lib\n\
  d8b860024e7d\ncreated execution instance caccc94ab15f\napi\ncore\nkleened.ex\n\n\
  executable caccc94ab15f and its container exited with exit-code 0\n```\n\nMounting\
  \ arbitrary files or directories into a container is also possible by\nspecifying\
  \ an absolute path on the host system instead of a volume name.\n\n### <a name=\"\
  env\"></a> Set environment variables (-e, --env, --env-file)\n\nYou can define the\
  \ variable and its value when running the container:\n\n```console\n$ klee run --env\
  \ VAR1=value1 --env VAR2=value2 FreeBSD-13.2-STABLE env | grep VAR\nVAR1=value1\n\
  VAR2=value2\n```\n\nIf you need to use variables that you've exported to your local\
  \ environment:\n\n```console\nexport VAR1=value1\nexport VAR2=value2\n\n$ klee run\
  \ --env VAR1=$VAR1 --env VAR2=$VAR2 FreeBSD-13.2-STABLE env | grep VAR\nVAR1=value1\n\
  VAR2=value2\n```\n\n### <a name=\"network\"></a> Connect a container to a network\
  \ (--network)\n\nWhen you start a container use the `--network` flag to connect\
  \ it to a network.\n\nThe following commands create a network named `my-net`, and\
  \ adds a container\nto the `my-net` network.\n\n```console\n$ klee network create\
  \ --subnet 10.20.30.0/24 --driver vnet my-net\n0974802b8ba1\n$ klee container run\
  \ --network=my-net FreeBSD-13.2-STABLE\nf25a12f7c2e0\ncreated execution instance\
  \ a6172d3be00f\n```\n\nYou can also choose the IP addresses for the container with\
  \ the `--ip`\nflag when you start the container on a user-defined network.\n\n```console\n\
  $ klee run --network=my-net --ip=10.20.30.75 FreeBSD-13.2-STABLE\n```\n\nYou can\
  \ also start a container using the `host` network, meaning the container\nwill have\
  \ full access to the networks of the host system.\n\n```console\n$ klee run --network=host\
  \ FreeBSD-13.2-STABLE\n```\n\nWhen you run a command using, e.g., `klee run` you\
  \ can only connect the container\nto a single network. However, you can add a (possibly)\
  \ running container to another\nnetwork using the `klee network connect` subcommand.\n\
  \nYou can connect multiple containers to the same network. Once connected, the\n\
  containers can communicate easily using only another container's IP address.\n\n\
  You can disconnect a container from a network using the `docker network\ndisconnect`\
  \ command.\n\n### <a name=\"detach\"></a> Start a container detached from process\
  \ IO (-d, --detach)\n\nThe `--detach` (or `-d`) flag tells `docker run` ignore the\
  \ container's\n`STDIN`, `STDOUT` and `STDERR`. This makes it possible to avoid output\
  \ making the\ncontainer run in the background.\n\n```console\n$ klee run -d FreeBSD-13.2-STABLE\
  \ echo test\n8d8d235e3489\ncreated execution instance 3891db558a90\n```\n\n### <a\
  \ name=\"jailparam\"></a> Specifying Jail parameters (-J, --jailparam)\n\nIt is\
  \ also possible to set jail-parameters when creating a container.\nUsing jail-parameters\
  \ it is possible to imposing or remove restrictions on the container/jail\nand generally\
  \ modify the runtime environment in various ways.\nSee the [`jails(8) manual pages`](https://man.freebsd.org/cgi/man.cgi?query=jail)\
  \ for details.\n\nFor instance, opening raw sockets is not permitted by default\
  \ in jails, which is required\nby, e.g., `ping(8)`:\n\n```console\nklee run FreeBSD-13.2-STABLE\
  \ --network host /sbin/ping 1.1.1.1\n56dd7945704e\ncreated execution instance a7e01343d836\n\
  ping: ssend socket: Operation not permitted\njail: /usr/bin/env -i /sbin/ping 1.1.1.1:\
  \ failed\n\nexecutable a7e01343d836 and its container exited with exit-code 1\n\
  ```\n\nThis can be allowed using jail-parameters:\n\n```console\nklee run FreeBSD-13.2-STABLE\
  \ -J mount.devfs -J allow.raw_sockets --network host /sbin/ping 1.1.1.1\n0efca150e755\n\
  created execution instance 1c0b446fac16\nPING 1.1.1.1 (1.1.1.1): 56 data bytes\n\
  64 bytes from 1.1.1.1: icmp_seq=0 ttl=63 time=14.737 ms\n64 bytes from 1.1.1.1:\
  \ icmp_seq=1 ttl=63 time=16.880 ms\n64 bytes from 1.1.1.1: icmp_seq=2 ttl=63 time=17.589\
  \ ms\n```\n\n> **Note**\n>\n> Manually setting jail parameters overrides the default\
  \ configuration, which is to\n> enable `devfs(5)` (kernel's device namespace) mounts.\
  \ Thus, it was explicitly enabled in the\n> previous example using `-J mount.devfs`.\n"
experimental: false
experimentalcli: false
long: 'The `klee container run` command first creates a container based on the

  specified image, and then `starts` it using the specified command. That is,

  `klee container run` is equivalent to `klee container create` followed by

  `klee container start`. A stopped container can be restarted with all its

  previous changes intact using `klee container start`.

  Use `klee container ls -a` to view a list of all containers.


  For information on connecting a container to a network, see the

  ["*Kleene network overview*"](/run/network/).

  '
options:
- deprecated: false
  description: 'Default user used when running commands in the container.

    This parameter will be overwritten by the jail parameter `exec.jail_user` if it
    is set.'
  experimental: false
  experimentalcli: false
  option: user
  shorthand: u
  value_type: text
- deprecated: false
  description: Set environment variables (e.g. --env FIRST=SomeValue --env SECOND=AnotherValue)
  experimental: false
  experimentalcli: false
  option: env
  shorthand: e
- deprecated: false
  description: 'Mount a volume/directory/file on the host filesystem into the container.

    Mounts are specfied using a `--mount SOURCE:DESTINATION[:rw|ro]` syntax.'
  experimental: false
  experimentalcli: false
  option: mount
  shorthand: m
  value_type: list
- deprecated: false
  description: 'Specify one or more jail parameters to use.

    If you do not want `mount.devfs`, `exec.clean`, and `exec.stop="/bin/sh /etc/rc.shutdown"`
    enabled, you must actively disable them.'
  experimental: false
  experimentalcli: false
  option: jailparam
  shorthand: J
- deprecated: false
  description: 'Network driver of the container.

    Possible values: `ipnet`, `host`, `vnet`, and `disabled`. If no network and no
    network driver is supplied,

    the network driver is set to `host`. If a network is specfied but no network driver,
    it is set to `ipnet`,'
  experimental: false
  experimentalcli: false
  option: driver
  shorthand: l
- deprecated: false
  description: Connect container to this network.
  experimental: false
  experimentalcli: false
  option: network
  shorthand: n
- deprecated: false
  description: IPv4 address used for the container. If omitted, an unused ip is allocated
    from the IPv4 subnet of `--network`.
  experimental: false
  experimentalcli: false
  option: ip
- deprecated: false
  description: IPv6 address used for the container. If omitted, an unused ip is allocated
    from the IPv6 subnet of `--network`.
  experimental: false
  experimentalcli: false
  option: ip6
- deprecated: false
  description: 'Do not output STDOUT/STDERR to the terminal.

    If this is set, Klee will exit and return the container ID when the container
    has been started.'
  experimental: false
  experimentalcli: false
  option: detach
  shorthand: d
- deprecated: false
  description: Send terminal input to container's STDIN. If set, `--detach` will be
    ignored.
  experimental: false
  experimentalcli: false
  option: interactive
  shorthand: i
- deprecated: false
  description: Allocate a pseudo-TTY
  experimental: true
  experimentalcli: true
  option: tty
  shorthand: t
- deprecated: false
  description: Assign a name to the container
  experimental: false
  experimentalcli: false
  option: name
- deprecated: false
  description: 'Publish one or more ports using the syntax `<HOST-PORT>[:CONTAINER-PORT][/<PROTOCOL>]`
    or

    `<INTERFACE>:<HOST-PORT>:<CONTAINER-PORT>[/<PROTOCOL>]`.

    `CONTAINER-PORT` defaults to `HOST-PORT` and `PROTOCOL` defaults to ''tcp''.'
  experimental: false
  experimentalcli: false
  option: publish
  shorthand: p
- deprecated: false
  description: Show this message and exit.
  experimental: false
  experimentalcli: false
  option: help
plink: klee.yaml
pname: klee
short: Run a command in a new container.
shortcut: container run
usage: klee run [OPTIONS] IMAGE [COMMAND]...
