command: klee create
deprecated: false
examples: "\nMore examples available at the [`klee container run` command](container_run.md)\
  \ documentation.\n\n### Create and start a container\n\nThe following example creates\
  \ an interactive container with a pseudo-TTY attached,\nthen starts the container\
  \ and attaches to it:\n\n```console\n$ klee container create --name mycontainer\
  \ hello-world:latest\n4d9d4e72a07f\n\n$ klee container start -ait mycontainer\n\
  created execution instance 71c359af03f7\nHello World\n\nexecutable 71c359af03f7\
  \ and its container exited with exit-code 0\n```\n\nThe above is the equivalent\
  \ of a `klee run`:\n\n```console\n$ klee container run -ait --name mycontainer hello-world:latest\n\
  6e33dbacde70\ncreated execution instance 4eb13ad4c3a4\nHello World\n\nexecutable\
  \ 4eb13ad4c3a4 and its container exited with exit-code 0\n```\n\n### Initialize\
  \ volumes\n\nContainer volumes can be automatically created during the `klee container\
  \ create`\nphase (and `klee container run` too):\n\n```console\n$ klee container\
  \ create -v /data --name storage FreeBSD13.2-STABLE\n5f8e437e5c95\n\n$ klee volume\
  \ ls\n VOLUME NAME    CREATED\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\
  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\
  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\n 6dedc1df7b42   10 secondsago\n```\n"
experimental: false
experimentalcli: false
long: 'The `klee container create` (or shorthand: `klee create`) command creates a

  new container from the specified image, without starting it.


  This command is useful when you want to set up a container configuration ahead of
  time

  so that it is ready to start when you need it.


  When creating a container, Kleened creates a ZFS dataset based

  on the image and prepares it for running the specified command.

  If no command is specified, Kleened uses the `CMD` specified in the image.

  The container ID is then printed to `STDOUT`.


  ### Specifying IMAGE

  The `IMAGE` argument takes the following two forms:


  - `<image_id>[:@<snapshot_id>]`

  - `<image_name>[:<tag>][:@<snapshot_id>]`


  If `<tag>` is omitted `latest` is assumed. For example,


  - `FreeBSD` means the image `FreeBSD` with tag `latest`

  - `FreeBSD:13.2-STABLE` means the image `FreeBSD` with tag `13.2-STABLE`

  - `FreeBSD:base:@6b3c821605d4` means the `FreeBSD:base` image but create the container
  from the snapshot `6b3c821605d4`

  - `48fa55889b0f` use the image having ID `48fa55889b0f`

  - `48fa55889b0f:@2028818d6f06` use the image as above but create the container from
  the snapshot `2028818d6f06`


  For more information about snapshots see the [Build snapshots](/build/building/snapshots/)
  section.


  ### Specifying volumes

  When creating containers it is also possible to mount one or more volumes using
  one or

  more instances of the `--volume/-v` option following the syntax `[name:]location[:ro]`.

  If `name` is supplied it implies that a volume with `name` has previously been created,
  otherwise

  a new nameless volume is created on-the-fly. If `:ro` is supplied, the volume is
  mounted read-only

  into the newly created container. For example:


  - `klee container create -v /storage:ro ...` create a read-only `storage` mountpoint
  in the container root.

  - `klee container create -v logs:/var/log/db ...` mount the volume named `logs`
  into the container at `/var/log/db`.


  ### Starting the container

  You can then use the `klee container start`

  (or shorthand: `klee start`) command to start the container at any point.

  Combinining `klee container create` and `klee container start` is equivalent to

  `klee container run`.


  The `klee create` command shares most of its options with the `klee run`

  command. Refer to the [`klee container run` command](container_run.md) section

  for details on the available flags and options.

  '
options:
- deprecated: false
  description: Assign a name to the container
  experimental: false
  experimentalcli: false
  option: name
- deprecated: false
  description: Alternate user that should be used for starting the container
  experimental: false
  experimentalcli: false
  option: user
  shorthand: u
  value_type: TEXT
- deprecated: false
  description: Connect a container to a network.
  experimental: false
  experimentalcli: false
  option: network
  shorthand: n
- deprecated: false
  description: IPv4 address (e.g., 172.30.100.104). If the '--network' parameter is
    not set '--ip' is ignored.
  experimental: false
  experimentalcli: false
  option: ip
- deprecated: false
  description: Mount a volume to the container
  experimental: false
  experimentalcli: false
  option: volume
  shorthand: v
- deprecated: false
  description: Set environment variables (e.g. --env FIRST=SomeValue --env SECOND=AnotherValue)
  experimental: false
  experimentalcli: false
  option: env
  shorthand: e
- deprecated: false
  description: 'Specify a jail parameters, see jail(8) for details  [default: mount.devfs,
    exec.stop="/bin/sh /etc/rc.shutdown jail"]'
  experimental: false
  experimentalcli: false
  option: jailparam
  shorthand: J
- deprecated: false
  description: Show this message and exit.
  experimental: false
  experimentalcli: false
  option: help
plink: klee.yaml
pname: klee
short: Create a new container.
shortcut: container create
usage: klee create [OPTIONS] IMAGE [COMMAND]...
