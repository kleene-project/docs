command: klee run
deprecated: false
examples: "\n### <a name=\"name\"></a> Assign name and allocate pseudo-TTY (--name,\
  \ -it)\n\n```console\n$ klee run --name test -ait FreeBSD-13.2-RELEASE /bin/sh\n\
  839aee293db2\ncreated execution instance 176b56a85a4a\n#\nroot@d6c0fe130dba:/# exit\n\
  exit\n\nexecutable 176b56a85a4a and its container exited with exit-code 0\n$\n```\n\
  \nThis example runs a container named `test` using the `FreeBSD-13.2-STABLE:latest`\n\
  image. The `-ait` options instructs Kleene to allocate a pseudo-TTY connected to\n\
  the container's stdin; creating an interactive Bourne shell in the container.\n\
  In the example, the Bourne shell is quit by entering `exit`.\n\n### <a name=\"mount\"\
  ></a> Mounting filesystems into containers (-m, --mount)\n\n```console\n$ klee run\
  \ -m some_storage:/foo/bar -ait FreeBSD-13.2-STABLE /bin/sh\n...\n# ls /foo\nbar\n\
  # exit\n$ klee volume ls                                                \n VOLUME\
  \ NAME    CREATED       \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\
  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\
  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\n some_storage   5 seconds ago \n```\n\
  \nWhen the target directory of a mount doesn't exist, Kleened\nwill automatically\
  \ create this directory in the container. This example\ncaused Kleened to create\
  \ `/foo/bar` folder before starting the container.\nSimilarily, if the specified\
  \ volume does not exist, Kleened will create\nit for you. In this example the volume\
  \ `some_storage` was just created.\n\n\n```console\n$ klee run -a -m archive:/writeprotected:ro\
  \ FreeBSD13.2-STABLE touch /writeprotected/here\n50d478460a91\ncreated execution\
  \ instance badd96b047a5\ntouch: /writeprotected/here: Read-only file system\njail:\
  \ /usr/bin/env -i touch /writeprotected/here: failed\n\nexecutable badd96b047a5\
  \ and its container exited with exit-code 1\n```\n\nVolumes can be mounted read-only\
  \ to control where a container writes files.\nThe `:ro` option must be postfixed\
  \ the mountpoint to mark the mount as read only.\n\n```console\n$ klee run -a -m\
  \ /home/someuser/kleened:/kleened FreeBSD13.2-STABLE ls /kleened/lib\nd8b860024e7d\n\
  created execution instance caccc94ab15f\napi\ncore\nkleened.ex\n\nexecutable caccc94ab15f\
  \ and its container exited with exit-code 0\n```\n\nMounting arbitrary files or\
  \ directories into a container is also possible by\nspecifying an absolute path\
  \ on the host system instead of a volume name.\n\n### <a name=\"env\"></a> Set environment\
  \ variables (-e, --env, --env-file)\n\nYou can define the variable and its value\
  \ when running the container:\n\n```console\n$ klee run -a --env VAR1=value1 --env\
  \ VAR2=value2 FreeBSD-13.2-STABLE env | grep VAR\nVAR1=value1\nVAR2=value2\n```\n\
  \nIf you need to use variables that you've exported to your local environment:\n\
  \n```console\nexport VAR1=value1\nexport VAR2=value2\n\n$ klee run -a --env VAR1=$VAR1\
  \ --env VAR2=$VAR2 FreeBSD-13.2-STABLE env | grep VAR\nVAR1=value1\nVAR2=value2\n\
  ```\n\n### <a name=\"network\"></a> Connect a container to a network (--network)\n\
  \nWhen you start a container use the `--network` flag to connect it to a network.\n\
  \nThe following commands create a network named `my-net`, and adds a container\n\
  to the `my-net` network.\n\n```console\n$ klee network create --subnet 10.20.30.0/24\
  \ --driver vnet my-net\n0974802b8ba1\n$ klee container run --network=my-net FreeBSD-13.2-STABLE\n\
  f25a12f7c2e0\ncreated execution instance a6172d3be00f\n```\n\nYou can also choose\
  \ the IP addresses for the container with the `--ip`\nflag when you start the container\
  \ on a user-defined network.\n\n```console\n$ klee run --network=my-net --ip=10.20.30.75\
  \ FreeBSD-13.2-STABLE\n```\n\nYou can also start a container using the `host` network,\
  \ meaning the container\nwill have full access to the networks of the host system.\n\
  \n```console\n$ klee run --network=host FreeBSD-13.2-STABLE\n```\n\nWhen you run\
  \ a command using, e.g., `klee run` you can only connect the container\nto a single\
  \ network. However, you can add a (possibly) running container to another\nnetwork\
  \ using the `klee network connect` subcommand.\n\nYou can connect multiple containers\
  \ to the same network. Once connected, the\ncontainers can communicate easily using\
  \ only another container's IP address.\n\nYou can disconnect a container from a\
  \ network using the `docker network\ndisconnect` command.\n\n### <a name=\"attach\"\
  ></a> Attach to STDIN/STDOUT/STDERR (-a, --attach)\n\nThe `--attach` (or `-a`) flag\
  \ tells `docker run` to bind to the container's\n`STDOUT` and `STDERR`. This makes\
  \ it possible to see the output if needed.\n\n```console\n$ klee run -a FreeBSD-13.2-STABLE\
  \ echo test\n422100eb65cc\ncreated execution instance 29096db4ca54\ntest\n\nexecutable\
  \ 29096db4ca54 and its container exited with exit-code 0\n```\n\n### <a name=\"\
  jailparam\"></a> Specifying Jail parameters (-J, --jailparam)\n\nIt is also possible\
  \ to set jail-parameters when creating a container.\nUsing jail-parameters it is\
  \ possible to imposing or remove restrictions on the container/jail\nand generally\
  \ modify the runtime environment in various ways.\nSee the [`jails(8) manual pages`](https://man.freebsd.org/cgi/man.cgi?query=jail)\
  \ for details.\n\nFor instance, opening raw sockets is not permitted by default\
  \ in jails, which is required\nby, e.g., `ping(8)`:\n\n```console\nklee run -a FreeBSD-13.2-STABLE\
  \ --network host /sbin/ping 1.1.1.1\n56dd7945704e\ncreated execution instance a7e01343d836\n\
  ping: ssend socket: Operation not permitted\njail: /usr/bin/env -i /sbin/ping 1.1.1.1:\
  \ failed\n\nexecutable a7e01343d836 and its container exited with exit-code 1\n\
  ```\n\nThis can be allowed using jail-parameters:\n\n```console\nklee run -a FreeBSD-13.2-STABLE\
  \ -J mount.devfs -J allow.raw_sockets --network host /sbin/ping 1.1.1.1\n0efca150e755\n\
  created execution instance 1c0b446fac16\nPING 1.1.1.1 (1.1.1.1): 56 data bytes\n\
  64 bytes from 1.1.1.1: icmp_seq=0 ttl=63 time=14.737 ms\n64 bytes from 1.1.1.1:\
  \ icmp_seq=1 ttl=63 time=16.880 ms\n64 bytes from 1.1.1.1: icmp_seq=2 ttl=63 time=17.589\
  \ ms\n```\n\n> **Note**\n>\n> Manually setting jail parameters overrides the default\
  \ configuration, which is to\n> enable `devfs(5)` (kernel's device namespace) mounts.\
  \ Thus, it was explicitly enabled in the\n> previous example using `-J mount.devfs`.\n"
experimental: false
experimentalcli: false
long: 'The `klee container run` command first creates a container based on the

  specified image, and then `starts` it using the specified command. That is,

  `klee container run` is equivalent to `klee container create` followed by

  `klee container start`. A stopped container can be restarted with all its

  previous changes intact using `klee container start`.

  Use `klee container ls -a` to view a list of all containers.


  For information on connecting a container to a network, see the

  ["*Kleene network overview*"](/config/containers/container-networking/).

  '
options:
- deprecated: false
  description: Assign a name to the container
  experimental: false
  experimentalcli: false
  option: name
- deprecated: false
  description: 'Alternate user that should be used for starting the container.

    This parameter will be overwritten by the jail parameter `exec.jail_user` if it
    is set.'
  experimental: false
  experimentalcli: false
  option: user
  shorthand: u
- deprecated: false
  description: Connect a container to a network
  experimental: false
  experimentalcli: false
  option: network
  shorthand: n
- deprecated: false
  description: IPv4 address (e.g., 172.30.100.104). If the '--network' parameter is
    not set '--ip' is ignored.
  experimental: false
  experimentalcli: false
  option: ip
- deprecated: false
  description: 'Mount a volume/directory/file on the host filesystem into the container.

    Mounts are specfied using a `--mount <source>:<destination>[:rw|ro]` syntax.'
  experimental: false
  experimentalcli: false
  option: mount
  shorthand: m
  value_type: list
- deprecated: false
  description: Set environment variables (e.g. --env FIRST=env --env SECOND=env)
  experimental: false
  experimentalcli: false
  option: env
  shorthand: e
- deprecated: false
  description: 'Specify one or more jail parameters to use. See the `jail(8)` man-page
    for details.

    If you do not want `exec.clean` and `mount.devfs` enabled, you must actively disable
    them.  [default: mount.devfs]'
  experimental: false
  experimentalcli: false
  option: jailparam
  shorthand: J
- deprecated: false
  description: Attach to STDOUT/STDERR. If this flag is omitted the container will
    run detached from klee.
  experimental: false
  experimentalcli: false
  option: attach
  shorthand: a
  value_type: flag
- deprecated: false
  description: Send terminal input to container's STDIN. Ignored if '--attach' is
    not used.
  experimental: false
  experimentalcli: false
  option: interactive
  shorthand: i
- deprecated: false
  description: Allocate a pseudo-TTY
  experimental: true
  experimentalcli: true
  option: tty
  shorthand: t
- deprecated: false
  description: Show this message and exit.
  experimental: false
  experimentalcli: false
  option: help
plink: klee.yaml
pname: klee
short: Run a command in a new container.
shortcut: container run
usage: klee run [OPTIONS] IMAGE [COMMAND]...
